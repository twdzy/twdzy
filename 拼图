public class Zero {
    void goLeft(int array2d[][]){

//        遍历开始
        for (int row = 0; row < array2d.length; row++) {
            for (int column = 0; column < array2d[0].length; column++) {
                if(array2d[row][column]==0){
//                    0在左边界
                    if(column==0){
                    }
//                   非左边界
                    else{
                        int c=array2d[row][column];
                        array2d[row][column]=array2d[row][column-1];
                        array2d[row][column-1]=c;
                        return;


                    }

                }
            }
        }
//        遍历结束

    }
    void goRight(int array2d[][]){//跳格

        for (int row = 0; row < array2d.length; row++) {
            for (int column = 0; column < array2d[0].length; column++) {
                if(array2d[row][column]==0){
                    if(column==array2d[0].length-1){ }else {
                        int c=0;
                        c=array2d[row][column+1];
                        array2d[row][column]=c;
                        array2d[row][column+1]=0;
                        System.out.println(4);
                        return;
                    }
                }
            }
        }

    }
    void goUp(int array2d[][]){

        for (int row = 0; row < array2d.length; row++) {
            for (int column = 0; column < array2d[0].length; column++) {
                if(array2d[row][column]==0){
                    if(row==0){ }else {
                        int c=array2d[row][column];
                        array2d[row][column]=array2d[row-1][column];
                        array2d[row-1][column]=c;
                        System.out.println(8);
                        return;
                    }
                }
            }
        }
    }
    void goDown(int array2d[][]){//跳格
        for (int row = 0; row < array2d.length; row++) {
            for (int column = 0; column < array2d[0].length; column++) {
                if(array2d[row][column]==0){
                    if(row==array2d.length-1){ } else {
                        int c=array2d[row][column];
                        array2d[row][column]=array2d[row+1][column];
                        array2d[row+1][column]=c;
                        System.out.println(2);
                        return;
                    }
                }
            }
        }
    }
}


import javax.swing.*;
import java.awt.*;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.*;
import java.util.List;
import java.util.Timer;

public class App {
    JPanel myPanel=new JPanel();
    JLabel label_txt=new JLabel();
    JLabel label_score=new JLabel();
    JLabel label_foreground=new JLabel();
    List<JLabel> label_list=new ArrayList<>();
    int cell=128;
    //顺序显示图片的矩阵
    int array2d[][]={
            {4,11,2},
            {9,10,3},
            {8,5,1},
            {7,6,0}
    };
    int array2d1[][]={
            {1,2,3},
            {4,5,6},
            {7,8,9},
            {10,11,0}
    };
    int i=0;
    //构造方法

    public App() {
        showMyGame();
        myPanel.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                super.keyPressed(e);//敲击任意键。
                if (e.getKeyCode() == KeyEvent.VK_DOWN) {
                    new Zero().goUp(array2d);
                    i++;
                }
                if (e.getKeyCode() == KeyEvent.VK_UP) {
                    new Zero().goDown(array2d);
                    i++;
                }
                if (e.getKeyCode() == KeyEvent.VK_RIGHT) {
                    new Zero().goLeft(array2d);
                    i++;
                }
                if (e.getKeyCode() == KeyEvent.VK_LEFT) {
                    new Zero().goRight(array2d);
                }
                showMyGame();
                label_score.setText("移动步数："+i);
            }
        });

    }
    //    为了使程序结构清晰，设置一个方法来显示所有组件showMyGame()
    void showMyGame(){
        //移动矩阵
        for (int row = 0; row < array2d.length; row++) {
            for (int column = 0; column < array2d[0].length; column++) {
                label_list.add(new JLabel());
                java.net.URL imgURL = App.class.getResource("img/diaochan_"+String.valueOf(array2d[row][column])+".png");
                label_list.get(row*3+column).setIcon(new ImageIcon(imgURL));
                label_list.get(row*3+column).setBounds(column*cell,row*cell,cell,cell);
                myPanel.add(label_list.get(row*3+column));
                myPanel.repaint();
            }
        }

    }
    //显示窗体方法
    void go(){
        java.net.URL imgURL999 = App.class.getResource("img/foreground.png");
        label_foreground.setIcon(new ImageIcon(imgURL999));
        label_foreground.setBounds(0,0,3*cell,4*cell);

        label_score.setText("移动步数：0");
        label_score.setBounds(20,520,200,30);
        label_score.setForeground(Color.red);
        label_score.setFont(new Font("Ariat",Font.PLAIN,20));
        //label_txt.setText("时间：0");
        label_txt.setBounds(220,520,150,30);
        label_txt.setForeground(Color.red);
        label_txt.setFont(new Font("Ariat",Font.PLAIN,20));
        myPanel.add(label_score);
        myPanel.add(label_txt);
        myPanel.add(label_foreground);
        myPanel.setLayout(null);
        JFrame frame = new JFrame("仲夏夜之梦拼图小游戏");
        frame.setContentPane(myPanel);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setBounds(100,100,390,600);
        frame.setVisible(true);
        //禁止用户修改大小
        frame.setResizable(false);
        myPanel.setFocusable(true);

    }
    public static void main(String[] args) {
        new App().showMyGame();
        new App().go();
    }
}




















